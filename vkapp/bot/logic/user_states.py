from .core.State import State
import time
from .utils.stickers import is_sticker
from vkapp.bot.dao import usersDAO, newsDAO

class BootStrapState(State):
    def on_trigger(self, trigger):
        usersDAO.new_blogger(trigger.current_uid)

        trigger.send_message(trigger.current_uid,
                             message='–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –±–æ—Ç –¥–ª—è –õ–µ–Ω—Ç–∞—á–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π Cleverbots')

        trigger.send_message(trigger.current_uid, message='https://cleverbots.ru')
        time.sleep(3)


        trigger.send_message(trigger.current_uid,
                             message='–¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ –Ω–∏—Ö –¥–µ–Ω—å–≥–∏!')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–î–µ—Ä–∂–∏ –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤!')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='<–Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤ —Ç—É—Ç>')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–≠—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã, —Å –∏—Ö –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π!')
        time.sleep(3)



        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–ü–æ–µ—Ö–∞–ª–∏"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=2920)
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –õ–µ–Ω—Ç–∞—á–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–Ø –í–∞–º –ø–∏—à—É"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=4650)
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–≤–æ–∏–º –Ω–æ–≤–æ—Å—Ç—è–º –∏ –ø–æ –±–∞–ª–∞–Ω—Å—É, '
                                                          '–∞ —Ç–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–†–∞—Å—Å–∫–∞–∂–∏-–∫–∞"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=4193)

        time.sleep(3)
        trigger.send_message(trigger.current_uid,
                             message='–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º? üòâ')
        return RootState()


class RootState(State):
    def on_enter(self, trigger):
        trigger.get_user_struct().erase_queue()
        pass

    def on_trigger(self, trigger):
        update = trigger.get_update()
        trigger.send_message(trigger.current_uid,
                             message=is_sticker(update))

        sticker_result = is_sticker(update)

        if sticker_result[0]:
            if sticker_result[1]=='2920':
                return ProposeNewsState()
            else:
                trigger.send_message(trigger.current_uid,
                                     message='–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä!')
        else:
            trigger.send_message(trigger.current_uid, message='–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')

class ProposeNewsState(State):
    def on_enter(self, trigger):
        trigger.send_message(trigger.current_uid,
                             message='–û—Ç–ª–∏—á–Ω–æ! –ü–∏—à–∏ —Å—é–¥–∞ –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ. –ö–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–û–≥–æ–Ω—å"')

        trigger.send_message(trigger.current_uid, sticker_id=3007)

    def on_trigger(self, trigger):
        update = trigger.get_update()
        sticker_result = is_sticker(update)

        if sticker_result[0]:
            if sticker_result[1]=='3007':
                return RootState()

    def on_exit(self, trigger):
        media_news = trigger.get_user_struct().message_queue[1:-1]
        news = newsDAO.new_news(None, media_news, trigger.current_uid)
        trigger.send_message(trigger.current_uid, message='–û–∫, –Ω–æ–≤–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ï–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—è—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å '
                                                          '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è')

