from .core.State import State
import time
from .utils.stickers import is_sticker
from vkapp.bot.dao import usersDAO, newsDAO, moneyDAO
import json

PROPOSAL_AMOUNT=1
PUBLISH_AMOUNT=100
MAX_DAILY_NEWS=10

class BootStrapState(State):
    def on_trigger(self, trigger):
        usersDAO.new_blogger(trigger.current_uid)

        trigger.send_message(trigger.current_uid,
                             message='–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –±–æ—Ç –¥–ª—è –õ–µ–Ω—Ç–∞—á–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π Cleverbots')

        trigger.send_message(trigger.current_uid, message='https://cleverbots.ru')
        time.sleep(3)


        trigger.send_message(trigger.current_uid,
                             message='–¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ –Ω–∏—Ö –¥–µ–Ω—å–≥–∏!')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–î–µ—Ä–∂–∏ –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤!')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='<–Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤ —Ç—É—Ç>')
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–≠—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã, —Å –∏—Ö –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π!')
        time.sleep(3)



        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–ü—Ä–∏–≤–µ—Ç"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=4639)
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –õ–µ–Ω—Ç–∞—á–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–Ø –í–∞–º –ø–∏—à—É"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=4650)
        time.sleep(3)

        trigger.send_message(trigger.current_uid, message='–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–≤–æ–∏–º –Ω–æ–≤–æ—Å—Ç—è–º –∏ –ø–æ –±–∞–ª–∞–Ω—Å—É, '
                                                          '–∞ —Ç–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–ß—É–¥–µ—Å–∞"')
        time.sleep(1.5)
        trigger.send_message(trigger.current_uid, sticker_id=4659)

        time.sleep(3)
        trigger.send_message(trigger.current_uid,
                             message='–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º? üòâ')
        return RootState()


class RootState(State):
    def on_enter(self, trigger):
        trigger.get_user_struct().erase_queue()
        pass

    def on_trigger(self, trigger):
        update = trigger.get_update()
        # trigger.send_message(trigger.current_uid,
        #                      message=is_sticker(update))

        sticker_result = is_sticker(update)

        if sticker_result[0]:
            if sticker_result[1]=='4639':
                return ProposeNewsState()
            elif sticker_result[1] == '4659':
                return StatisticsState()
            elif sticker_result[1] == '4650':
                return AdminChatState()
            else:
                trigger.send_message(trigger.current_uid,
                                     message='–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä!')
        else:
            trigger.send_message(trigger.current_uid, message='–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')

class ProposeNewsState(State):
    def on_enter(self, trigger):
        trigger.get_user_struct().erase_queue()
        news = newsDAO.get_news_proposed_today(trigger.current_uid)
        trigger.send_message(trigger.current_uid, message='–°–µ–≥–æ–¥–Ω—è —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª {} –Ω–æ–≤–æ—Å—Ç–µ–π'.format(len(news)))

        if len(news) > MAX_DAILY_NEWS:
            trigger.send_message(trigger.current_uid,
                                 message='–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π')
            return RootState()

        # for news_i in news:
        #     trigger.send_message(trigger.current_uid, message=news_i.media)


        trigger.send_message(trigger.current_uid,
                             message='–û—Ç–ª–∏—á–Ω–æ! –ü–∏—à–∏ —Å—é–¥–∞ –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ. –ö–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä "–í—Å–µ –Ω–∞ –±–∞–ª"')



        trigger.send_message(trigger.current_uid, sticker_id=4662)

    def on_trigger(self, trigger):
        update = trigger.get_update()

        sticker_result = is_sticker(update)
        if sticker_result[0]:
            if sticker_result[1]=='4662':
                media_news=''
                pic=''
                link=None
                for entity in trigger.get_user_struct().message_queue[:-1]:
                    if len(entity)>6:
                        if 'attach1_photo' in entity[6]:
                            pic=entity[6]['attach1_photo']
                            print ('pic=', pic)
                        if 'attach1_url' in entity[6]:
                            link=entity[6]['attach1_url']
                            print ('link=', link)
                        media_news += entity[5]+' '

                http_index = media_news.find('http')
                print('http_index={}'.format(http_index))
                if http_index != -1:
                    link = media_news[http_index:]
                    media_news = media_news[:http_index]

                print (media_news)

                news = newsDAO.new_news(link=link, media=media_news, uid=trigger.current_uid, pic=pic)
                trigger.send_message(trigger.current_uid,
                                     message='–û–∫, –Ω–æ–≤–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ï–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—è—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å '
                                             '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è')

                moneyDAO.new_income_proposal(PROPOSAL_AMOUNT, news)
                trigger.send_message(trigger.current_uid, message='–¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {} —Ä—É–±–ª–µ–π –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏. '
                                                                  '–¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {} —Ä—É–±–ª–µ–π. '
                                                                  '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–µ–∂–∏–º–µ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"'
                                                                  ' (–æ—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä "–ß—É–¥–µ—Å–∞")'
                                     .format(PROPOSAL_AMOUNT, moneyDAO.re_count_balance(trigger.current_uid)))
                trigger.send_message(trigger.current_uid, sticker_id=4659)
                return RootState()


class StatisticsState(State):
    def on_enter(self, trigger):
        trigger.get_user_struct().erase_queue()
        trigger.send_message(trigger.current_uid, message='–£ —Ç–µ–±—è –Ω–∞ —Å—á–µ—Ç—É {} —Ä—É–±–ª–µ–π. –í–æ—Ç —Å—Ç–∞—Ç—É—Å —Ç–≤–æ–∏—Ö –ø–æ—Å—Ç–æ–≤:'
                             .format(moneyDAO.re_count_balance(trigger.current_uid)))
        news = newsDAO.news_by_blogger(trigger.current_uid)
        for i in range(len(news)):
            trigger.send_message(trigger.current_uid, message='-------------------------')
            trigger.send_message(trigger.current_uid, message='–ü–æ—Å—Ç ‚Ññ{}'.format(i+1))

            #media_post = ' '.join(media_list)
            # if len(media_list[i]) > 300:
            #     trigger.send_message(trigger.current_uid, message='{}...'.format(media_list[i][:30]))
            # else:
            if (news[i].pic is not None) and (news[i].pic != ''):
                trigger.send_message(trigger.current_uid, attachment='photo'+news[i].pic)

            if (news[i].media is not None) and (news[i].media != ''):
                trigger.send_message(trigger.current_uid, message=news[i].media)
            if (news[i].link is not None) and (news[i].link != ''):
                trigger.send_message(trigger.current_uid, message='–°—Å—ã–ª–∫–∞: {}'.format(news[i].link))

            review_rating =newsDAO.get_news_review_rating(news[i])
            trigger.send_message(trigger.current_uid, message='–û—Ü–µ–Ω–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: '+('–î–∞' if review_rating!=0 else '–ù–µ—Ç'))
            if review_rating != 0:
                trigger.send_message(trigger.current_uid,
                                     message='–û—Ü–µ–Ω–∫–∞: ' + '–õ–∞–π–∫' if review_rating == 1 else '–î–∏–∑–ª–∞–π–∫')

            trigger.send_message(trigger.current_uid, message='–û–ø—É–±–ª–∏–∫–∞–≤–∞–Ω–æ: '+('–î–∞' if newsDAO.is_news_published(news[i]) else '–ù–µ—Ç'))
        return RootState()


class AdminChatState(State):
    def on_enter(self, trigger):
        trigger.get_user_struct().erase_queue()
        trigger.send_message(trigger.current_uid,
                             message='–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã.'
                                     ' –û—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä "–í—Å–µ –Ω–∞ –±–∞–ª", —á—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞')

        trigger.send_message(trigger.current_uid, sticker_id=4662)

    def on_trigger(self, trigger):
        update = trigger.get_update()
        sticker_result = is_sticker(update)
        if sticker_result[0]:
            if sticker_result[1] == '4662':
                trigger.send_message(trigger.current_uid,
                                    message='–†–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤—ã–∫–ª—é—á–µ–Ω. –ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä "–ü—Ä–∏–≤–µ—Ç",'
                                            ' –∞ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –æ—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä "–ß—É–¥–µ—Å–∞"')
                return RootState()

